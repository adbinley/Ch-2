geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_mig
plotlist1 <- list(fig1a,ava_plot_mig,fig1c)
figure1 <- ggarrange(plotlist=plotlist1,
common.legend = T,
ncol=2,
nrow=2,
legend="none",
align="hv")#%>%
#png("fig_outputs/figure1_dot.png", height = 11.5, width = 8, units = "in",res=300)
png("fig_outputs/figure1_noFCM.png", height = 11.5, width = 8, units = "in",res=300)
figure1
dev.off()
load("data_outputs/rPI_migrants_2019.RData") #now without barren
migrants_2019$season <- factor(migrants_2019$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
migrants_2019$SW_mig <- factor(migrants_2019$SW_mig, levels=c("N","S","NR","R"))
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(4)
int.plota <- migrants_2019 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean rPIm") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
load("data_outputs/all_data4_mig_nobarren.RData")
int.plotb <- all_data4_mig %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(SHM),
sd = sd(SHM),
se = sd(SHM)/sqrt(length(SHM)))
fig1c <- ggplot(int.plotb, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean SHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1c
load("data_outputs/availability_data_nobarren.RData")
int.plot.ava <- availability1 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
names(availability1)[names(availability1) == 'mean'] <- 'Exposure'
availability1$season <- factor(availability1$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
availability1$SW_mig <- factor(availability1$SW_mig, levels=c("N","S","NR","R"))
int.plot.ava <- availability1 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_mig <- ggplot(int.plot.ava, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_mig
plotlist1 <- list(fig1a,ava_plot_mig,fig1c)
figure1 <- ggarrange(plotlist=plotlist1,
common.legend = T,
ncol=2,
nrow=2,
legend="none",
align="hv")#%>%
png("fig_outputs/figure1_nobarren.png", height = 8, width = 8, units = "in",res=300)
figure1
dev.off()
png("fig_outputs/figure1_nobarren.png", height = 9, width = 8, units = "in",res=300)
figure1
dev.off()
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(5)
mig.diet.plot <- migrants_2019 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig2a <- ggplot(mig.diet.plot, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean rPIm") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig2a
load("data_outputs/all_data4_diet_nobarren.RData")
fig2c <- ggplot(int.plot.diet.b, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean SHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
int.plot.diet.b <- all_data4_diet %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(SHM),
sd = sd(SHM),
se = sd(SHM)/sqrt(length(SHM)))
fig2c <- ggplot(int.plot.diet.b, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean SHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig2c
int.plot.ava <- availability1 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_diet <- ggplot(int.plot.ava, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_diet
plotlist2 <- list(fig2a,ava_plot_diet,fig2c)
figure2 <- ggarrange(plotlist=plotlist2,
common.legend = T,
ncol=2,
nrow=2,
legend="none",
align="hv")
png("fig_outputs/figure2_nobarren.png", height = 9, width = 8, units = "in",res=300)
figure2
dev.off()
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(6)
mig.for.plot <- migrants_2019 %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig3a <- ggplot(mig.for.plot, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean rPIm") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager",
"Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig3a
load("data_outputs/all_data4_for_nobarren.RData")
int.plot.for.b <- all_data4_for %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(SHM),
sd = sd(SHM),
se = sd(SHM)/sqrt(length(SHM)))
fig3c <- ggplot(int.plot.for.b, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean SHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager",
"Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig3c
int.plot.ava <- availability1 %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_for <- ggplot(int.plot.ava, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager","Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_for
plotlist3 <- list(fig3a,ava_plot_for,fig3c)
figure3 <- ggarrange(plotlist=plotlist3,
common.legend = T,
ncol=2,
nrow=2,
legend="none",
align="hv")
png("fig_outputs/figure3_nobarren.png", height = 9, width = 8, units = "in",res=300)
figure3
dev.off()
#### loops ####
#relative abundance for seasonal windows, multiplied by PLAND
#mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_nobarren.tif")
mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_noFCM.tif")
#everything broken
library(ebirdst)
library(tidyverse)
library(raster)
#### loops ####
#relative abundance for seasonal windows, multiplied by PLAND
#mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_nobarren.tif")
mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_noFCM.tif")
plot(mod_pland_ebd)
png("fig_outputs/mod_pland.png", height = 9, width = 8, units = "in",res=300)
plot(mod_pland_ebd)
dev.off()
x <- raster("E:/eBird/data/raw/STEM/bkpwar-ERD2019-STATUS-20201002-1c7c7cf3/srd_raster_template.tif")
plot(x)
rm(x)
x <- raster("E:/eBird/data/raw/STEM/bkcchi-ERD2019-STATUS-20200929-9269169c/bkcchi-ERD2019-STATUS-20200929-9269169c_lr_2019_abundance-seasonal_resident.tif")
x <- raster("E:/eBird/data/raw/STEM/bkcchi-ERD2019-STATUS-20200929-9269169c/abundance_seasonal/bkcchi-ERD2019-STATUS-20200929-9269169c_lr_2019_abundance-seasonal_resident.tif")
plot(x)
png("fig_outputs/rel_abd.png", height = 9, width = 8, units = "in",res=300)
plot(x)
dev.off()
ggplot() +
geom_tile(data=x, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot(x) +
geom_tile(aes(x=x, y=y, fill=factor(value)), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
abd <- x
ggplot(x) +
geom_tile(aes(x=x, y=y, fill=factor(value)), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot(abd) +
geom_tile(aes(x=x, y=y, fill=factor(value)), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
gplot(abd) +
geom_tile(aes(x=x, y=y, fill=factor(value)), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
abd <- as(x, "SpatialPixelsDataFrame")
abd_df <- as.data.frame(abd)
colnames(abd_df) <- c("value", "x", "y")
gplot(abd) +
geom_tile(aes(x=x, y=y, fill=factor(value)), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
library(viridis)
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_continuous() +
coord_equal() +
theme_classic()
?scale_fill_continuous
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_gradient() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_gradient2() +
coord_equal() +
theme_classic()
png("fig_outputs/rel_abd.png", height = 9, width = 8, units = "in",res=300)
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_gradient2() +
coord_equal() +
theme_classic()
dev.off()
exp <- mod_pland_ebd*x
#### loops ####
#relative abundance for seasonal windows, multiplied by PLAND
mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_nobarren.tif")
plot)mod_pland_ebd
plot(mod_pland_ebd)
mod_pland_ebd*x
#need updated run names
ebirdst_species <- ebirdst_runs %>%
dplyr::select(c("species_code","run_name"))
my_species <- read.csv("C:/Users/AllisonBinley/OneDrive - Carleton University/thesis/CH2_2021/data/bird_data_v4.csv")
my_species <- left_join(my_species, ebirdst_species, by = "species_code")
setwd("E:/eBird/data/raw/STEM")
i <- 10
code <- my_species$species_code[i]
run_name <- my_species$run_name.y[i]
abd <- load_raster(product = "abundance", path = run_name)
start <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_start_dt"]]}
end <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_end_dt"]]}
bre <- c(start, end)
ext_vec <-  c(xmin = -12240259, xmax = -1344534,
ymin = -6945058, ymax = 9202317)
ext <- sf::st_bbox(ext_vec, crs = "+proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs")
bre_extent <- ebirdst_extent(ext,
t = bre)
#breeding
bre_abd <- ebirdst_subset(abd, ext = bre_extent)
bre_abd_mean <- calc(bre_abd, mean)
exposure <- bre_abd_mean*mod_pland_ebd
plot(exposure)
View(my_species)
i <- 56
code <- my_species$species_code[i]
run_name <- my_species$run_name.y[i]
abd <- load_raster(product = "abundance", path = run_name)
start <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_start_dt"]]}
end <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_end_dt"]]}
bre <- c(start, end)
ext_vec <-  c(xmin = -12240259, xmax = -1344534,
ymin = -6945058, ymax = 9202317)
ext <- sf::st_bbox(ext_vec, crs = "+proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs")
bre_extent <- ebirdst_extent(ext,
t = bre)
#breeding
bre_abd <- ebirdst_subset(abd, ext = bre_extent)
bre_abd_mean <- calc(bre_abd, mean)
exposure <- bre_abd_mean*mod_pland_ebd
plot(exposure)
plot(bre_abd_mean)
exposure1 <- as(exposure, "SpatialPixelsDataFrame")
exposure2 <- as.data.frame(exposure1)
colnames(exposure2) <- c("value", "x", "y")
ggplot() +
geom_tile(data=exposure2, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
png("fig_outputs/exposure.png", height = 9, width = 8, units = "in",res=300)
ggplot() +
geom_tile(data=exposure2, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
dev.off()
1+1
png("fig_outputs/exposure.png", height = 9, width = 8, units = "in",res=300)
ggplot() +
geom_tile(data=exposure2, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=bre_abd_mean, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=bre_abd_mean, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(mod_pland_ebd, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
ggplot() +
geom_tile(data=abd_df, aes(x=x, y=y, fill=value), alpha=0.8) +
scale_fill_viridis() +
coord_equal() +
theme_classic()
png("fig_outputs/exposure.png", height = 9, width = 8, units = "in",res=300)
pdf("fig_outputs/exposure.pdf", height = 9, width = 8, units = "in",res=300)
