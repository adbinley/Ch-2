library(nlme)
library(car)
library(tidyverse)
library(lmerTest)
library(MuMIn)
library(effectsize)
library(emmeans)
library(lattice)
library(ggpubr)
library(rstatix)
library(ggsci)
library(ggsignif)
#lme4
mig.exp.lmer <- lmer(Exposure ~ season*SW_mig + (1 | species_code), data = availability1)
summary(mig.exp.lmer)
anova(mig.stat.lmer)
anova(mig.exp.lmer)
# migratory models --------------------------------------------------------
library(lme4)
library(nlme)
library(car)
library(tidyverse)
library(lmerTest)
library(MuMIn)
library(effectsize)
library(emmeans)
library(lattice)
library(ggpubr)
library(rstatix)
library(ggsci)
library(ggsignif)
load("data_outputs/availability_data_nobarren.RData")
names(availability1)[names(availability1) == 'mean'] <- 'Exposure'
availability1$season <- factor(availability1$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
availability1$SW_mig <- factor(availability1$SW_mig, levels=c("N","S","NR","R"))
mypal <- pal_npg("nrc", alpha = 1)(4)
int.plot.ava <- availability1 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_mig <- ggplot(int.plot.ava, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_mig
#lme4
mig.exp.lmer <- lmer(Exposure ~ season*SW_mig + (1 | species_code), data = availability1)
summary(mig.exp.lmer)
AIC(mig.exp.lmer)
#assumptions
#boxplot suggests outliers
#log transformation did little to help any assumptions
bxp <- ggboxplot(
availability1, x = "season", y = "Exposure",
color = "SW_mig", palette = "jco"
)
bxp
outliers.mig <- availability1 %>%
group_by(season, SW_mig) %>%
identify_outliers(Exposure)
#normality
#using qq since sample size relatively large
ggqqplot(migrants_2019, "Exposure", ggtheme = theme_bw()) +
facet_grid(season ~ SW_mig)
#normality
#using qq since sample size relatively large
ggqqplot(availability1, "Exposure", ggtheme = theme_bw()) +
facet_grid(season ~ SW_mig)
levene_test(availability1, Exposure~SW_mig*season)
#fine
ggplot(availability1, aes(y=Exposure, x=SW_mig))+
geom_point() +
facet_wrap(~season)
#homogeneity of covariances
box_m(availability1[, "Exposure", drop = FALSE], availability1$SW_mig)
range(availability1$Exposure)
View(availability1)
#lme4
mig.exp.lmer <- lmer(log(Exposure) ~ season*SW_mig + (1 | species_code), data = availability1)
#lme4
mig.exp.lmer <- lmer(sqrt(Exposure) ~ season*SW_mig + (1 | species_code), data = availability1)
summary(mig.exp.lmer)
anova(mig.exp.lmer)
hist(availability1$Exposure)
availability1 <- availability1 %>%
mutate(sqrt_exp = sqrt(Exposure))
View(availability1)
hist(availability1$sqrt_exp)
#lme4
mig.exp.lmer <- lmer(sqrt_exp ~ season*SW_mig + (1 | species_code), data = availability1)
summary(mig.exp.lmer)
#assumptions
#boxplot suggests outliers
#log transformation did little to help any assumptions
bxp <- ggboxplot(
availability1, x = "season", y = "sqrt_exp",
color = "SW_mig", palette = "jco"
)
bxp
outliers.mig <- availability1 %>%
group_by(season, SW_mig) %>%
identify_outliers(sqrt_exp)
#normality
#using qq since sample size relatively large
ggqqplot(availability1, "sqrt_exp", ggtheme = theme_bw()) +
facet_grid(season ~ SW_mig)
#homogeneity of variances
availability1 %>%
group_by(season) %>%
levene_test(sqrt_exp ~ SW_mig)
levene_test(availability1, sqrt_exp~SW_mig*season)
#better transformed
ggplot(availability1, aes(y=swrt_exp, x=SW_mig))+
geom_point() +
facet_wrap(~season)
#better transformed
ggplot(availability1, aes(y=sqrt_exp, x=SW_mig))+
geom_point() +
facet_wrap(~season)
#homogeneity of covariances
box_m(availability1[, "sqrt_exp", drop = FALSE], availability1$SW_mig)
availability1 <- availability1 %>%
mutate(sqrt_exp = sqrt(Exposure),
log_exp = log(Exposure+1))
#lme4
mig.exp.lmer <- lmer(log_exp ~ season*SW_mig + (1 | species_code), data = availability1)
summary(mig.exp.lmer)
anova(mig.exp.lmer)
#assumptions
#boxplot suggests outliers
#log transformation did little to help any assumptions
bxp <- ggboxplot(
availability1, x = "season", y = "log_exp",
color = "SW_mig", palette = "jco"
)
bxp
outliers.mig <- availability1 %>%
group_by(season, SW_mig) %>%
identify_outliers(log_exp)
#normality
#using qq since sample size relatively large
ggqqplot(availability1, "log_exp", ggtheme = theme_bw()) +
facet_grid(season ~ SW_mig)
#homogeneity of variances
availability1 %>%
group_by(season) %>%
levene_test(log_exp ~ SW_mig)
levene_test(availability1, log_exp~SW_mig*season)
levene_test(availability1, sqrt_exp~SW_mig*season)
#better transformed
ggplot(availability1, aes(y=log_exp, x=SW_mig))+
geom_point() +
facet_wrap(~season)
#better transformed
ggplot(availability1, aes(y=sqrt_exp, x=SW_mig))+
geom_point() +
facet_wrap(~season)
#homogeneity of covariances
box_m(availability1[, "sqrt_exp", drop = FALSE], availability1$SW_mig)
#homogeneity of covariances
box_m(availability1[, "log_exp", drop = FALSE], availability1$SW_mig)
int.plot.ava <- availability1 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(sqrt_exp),
sd = sd(sqrt_exp),
se = sd(sqrt_exp)/sqrt(length(sqrt_exp)))
ava_plot_mig <- ggplot(int.plot.ava, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_mig
View(availability1)
summary(mig.exp.lmer)
confint(mig.exp.lmer)
mig.exp.tukey.table <- emmeans(mig.exp.lmer, list(pairwise ~ SW_mig*season), adjust = "holm")
summary(mig.tukey.table)
summary(mig.exp.tukey.table)
write.table(mig.exp.tukey.table$`pairwise differences of SW_mig, season`, file = "fig_outputs/exp-mig-holm.txt", sep = ",", quote = FALSE, row.names = F)
write.table(mig.exp.tukey.table$`pairwise differences of SW_mig, season`, file = "fig_outputs/exp-mig-holm_noFCM.txt", sep = ",", quote = FALSE, row.names = F)
rsquared(mig.exp.lmer)
#marginal and conditional Rsq, AIC
#install.packages("piecewiseSEM")
library(piecewiseSEM)
rsquared(mig.exp.lmer)
AIC(mig.stat.lmer)
AIC(mig.exp.lmer)
anova(mig.exp.lmer)
summary(mig.exp.lmer, ddf = "Satterthwaite")
t <- anova(mig.exp.lmer)
summary(t, ddf = "Satterthwaite")
anova(mig.exp.lmer)
#lme4
mig.exp.lmer <- lmer(log_exp ~ season*SW_mig + (species_code | season), data = availability1)
#lme4
mig.exp.lmer <- lmer(log_exp ~ season*SW_mig + (1 | species_code), data = availability1)
AIC(mig.exp.lmer)
rsquared(mig.exp.lmer)
#lme4
mig.exp.lmer <- lmer(sqrt_exp ~ season*SW_mig + (1 | species_code), data = availability1)
AIC(mig.exp.lmer)
anova(mig.exp.lmer)
mig.exp.tukey.table <- emmeans(mig.exp.lmer, list(pairwise ~ SW_mig*season), adjust = "holm")
write.table(mig.exp.tukey.table$`pairwise differences of SW_mig, season`, file = "fig_outputs/exp-mig-holm.txt", sep = ",", quote = FALSE, row.names = F)
rsquared(mig.exp.lmer)
#lme4
diet.exp.lmer <- lmer(sqrt_exp ~ season*diet2 + (1 | species_code), data = availability1)
summary(diet.exp.lmer)
AIC(diet.exp.lmer)
#assumptions
#boxplot suggests outliers
#log transformation did little to help any assumptions
bxp <- ggboxplot(
availability1, x = "season", y = "sqrt_exp",
color = "diet2", palette = "jco"
)
bxp
outliers.diet <- availability1 %>%
group_by(season, diet2) %>%
identify_outliers(sqrt_exp)
#normality
#using qq since sample size relatively large
ggqqplot(availability1, "sqrt_exp", ggtheme = theme_bw()) +
facet_grid(season ~ diet2)
#homogeneity of variances
availability1 %>%
group_by(season) %>%
levene_test(sqrt_exp ~ diet2)
levene_test(availability1, sqrt_exp~diet2*season)
#better transformed, but still problematic
ggplot(availability1, aes(y=sqrt_exp, x=diet2))+
geom_point() +
facet_wrap(~season)
#homogeneity of covariances
box_m(availability1[, "sqrt_exp", drop = FALSE], availability1$diet2)
diet.exp.tukey.table <- emmeans(diet.exp.lmer, list(pairwise ~ diet2*season), adjust = "holm")
summary(diet.exp.tukey.table)
write.table(mig.exp.tukey.table$`pairwise differences of diet2, season`, file = "fig_outputs/exp-diet-holm.txt", sep = ",", quote = FALSE, row.names = F)
write.table(diet.exp.tukey.table$`pairwise differences of diet2, season`, file = "fig_outputs/exp-diet-holm.txt", sep = ",", quote = FALSE, row.names = F)
rsquared(diet.exp.lmer)
summary(diet.exp.lmer)
anova(diet.exp.lmer)
mypal <- pal_npg("nrc", alpha = 1)(5)
int.plot.ava <- availability1 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(availability),
sd = sd(availability),
se = sd(availability)/sqrt(length(availability)))
int.plot.ava <- availability1 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_diet <- ggplot(int.plot.ava, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_diet
png("fig_outputs/diet_exposure.png", height = 8, width = 11.5, units = "in",res=300)
ava_plot_mig
dev.off()
png("fig_outputs/diet_exposure.png", height = 8, width = 11.5, units = "in",res=300)
ava_plot_diet
dev.off()
mypal <- pal_npg("nrc", alpha = 1)(6)
int.plot.ava <- availability1 %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(Exposure),
sd = sd(Exposure),
se = sd(Exposure)/sqrt(length(Exposure)))
ava_plot_for <- ggplot(int.plot.ava, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
#  labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_for
png("fig_outputs/for_exposure.png", height = 8, width = 11.5, units = "in",res=300)
ava_plot_for
dev.off()
ava_plot_for <- ggplot(int.plot.ava, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Exposure") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager","Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
ava_plot_for
png("fig_outputs/for_exposure.png", height = 8, width = 11.5, units = "in",res=300)
ava_plot_for
dev.off()
#lme4
for.exp.lmer <- lmer(sqrt_exp ~ season*sw_foraging + (1 | species_code), data = availability1)
summary(for.exp.lmer)
AIC(for.exp.lmer)
anova(for.exp.lmer)
rsquared(for.exp.lmer)
#assumptions
#boxplot suggests outliers
#log transformation did little to help any assumptions
bxp <- ggboxplot(
availability1, x = "season", y = "sqrt_exp",
color = "sw_foraging", palette = "jco"
)
bxp
outliers.diet <- availability1 %>%
group_by(season, sw_foraging) %>%
identify_outliers(sqrt_exp)
outliers.for <- availability1 %>%
group_by(season, sw_foraging) %>%
identify_outliers(sqrt_exp)
#normality
#using qq since sample size relatively large
ggqqplot(availability1, "sqrt_exp", ggtheme = theme_bw()) +
facet_grid(season ~ sw_foraging)
#homogeneity of variances
availability1 %>%
group_by(season) %>%
levene_test(sqrt_exp ~ sw_foraging)
levene_test(availability1, sqrt_exp~sw_foraging*season)
#better transformed, but still problematic
ggplot(availability1, aes(y=sqrt_exp, x=sw_foraging))+
geom_point() +
facet_wrap(~season)
#homogeneity of covariances
box_m(availability1[, "sqrt_exp", drop = FALSE], availability1$sw_foraging)
for.exp.tukey.table <- emmeans(for.exp.lmer, list(pairwise ~ sw_foraging*season), adjust = "holm")
summary(for.exp.tukey.table)
anova(for.exp.lmer)
for.exp.tukey.table <- emmeans(for.exp.lmer, list(pairwise ~ sw_foraging), adjust = "holm")
summary(for.exp.tukey.table)
write.table(for.exp.tukey.table$`pairwise differences of sw_foraging`, file = "fig_outputs/exp-for-holm.txt", sep = ",", quote = FALSE, row.names = F)
anova(for.exp.lmer)
anova(diet.exp.lmer)
anova(mig.exp.lmer)
my_species <- read.csv("C:/Users/AllisonBinley/OneDrive - Carleton University/thesis/CH2_2021/data/bird_data_v4.csv")
x <- raster("E:/eBird/data/raw/STEM/bkpwar-ERD2019-STATUS-20201002-1c7c7cf3/srd_raster_template.tif")
library(raster)
x <- raster("E:/eBird/data/raw/STEM/bkpwar-ERD2019-STATUS-20201002-1c7c7cf3/srd_raster_template.tif")
#calculate PLAND within 3km square for LCCS2 (modified covers)
r <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop2.tif")
filter_r <- r %in% c(35,36) #modified land cover classes only, no FCM
library(beepr)
beep()
filter_r1 <- clamp(filter_r,lower = 0.5, useValues = F)
r2 <- mask(r,filter_r1)
unique(r2)
beep()
#writeRaster(r2, filename = "D:/Allison/Big_data/Ch-2 landcover/modified_cover_only.tif")
#writeRaster(r2, filename = "D:/Allison/Big_data/Ch-2 landcover/modified_cover_only_nobarren.tif")
writeRaster(r2, filename = "D:/Allison/Big_data/Ch-2 landcover/modified_cover_only_noFCM.tif")
mod_pland <- aggregate(r2, fact=6, fun=function(vals, na.rm) {
sum(vals>0, na.rm=na.rm)/length(vals)
})
#match to ebd abundance raster
#here using the abd map for house wren
run_name <- my_species$run_name.y[1]
abd <- load_raster(product = "abundance", path = run_name)
library(ebirdst)
abd <- load_raster(product = "abundance", path = run_name)
getwd()
setwd("E:/eBird/data/raw/STEM")
abd <- load_raster(product = "abundance", path = run_name)
View(my_species)
#match to ebd abundance raster
#here using the abd map for house wren
#need updated run names for 2019 data
ebirdst_species <- ebirdst_runs %>%
select(c("species_code","run_name"))
#match to ebd abundance raster
#here using the abd map for house wren
#need updated run names for 2019 data
ebirdst_species <- ebirdst_runs %>%
dplyr::select(c("species_code","run_name"))
my_species <- left_join(my_species, ebirdst_species, by = "species_code")
run_name <- my_species$run_name.y[1]
abd <- load_raster(product = "abundance", path = run_name)
mod_pland_ebd <- resample(mod_pland,abd, method="bilinear")
hiiiiiiiiiiiiiiiiiiiiiiiiiii
plot(mod_pland_ebd)
plot(mod_pland)
writeRaster(mod_pland_ebd, filename = "D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_noFCM.tif")
library(ebirdst)
library(tidyverse)
library(raster)
#### loops ####
#relative abundance for seasonal windows, multiplied by PLAND
mod_pland_ebd <- raster("D:/Allison/Big_data/Ch-2 landcover/modified_cover_ebd_nobarren.tif")
#need updated run names
ebirdst_species <- ebirdst_runs %>%
dplyr::select(c("species_code","run_name"))
my_species <- read.csv("C:/Users/AllisonBinley/OneDrive - Carleton University/thesis/CH2_2021/data/bird_data_v4.csv")
my_species <- left_join(my_species, ebirdst_species, by = "species_code")
setwd("E:/eBird/data/raw/STEM")
breeding_exp <- list()
for(i in 1:238){
#for(i in 169:length(my_species$species_code)){
#for(i in 1:3){
#library(ebirdst)
code <- my_species$species_code[i]
run_name <- my_species$run_name.y[i]
skip_to_next <- FALSE
tryCatch(
#  pis <- load_pis(run_name), error = function(e){skip_to_next <<- TRUE})
abd <- load_raster(product = "abundance", path = run_name), error = function(e){skip_to_next <<- TRUE})
if(skip_to_next) { next }
start <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_start_dt"]]}
end <- my_species %>%
filter(species_code==code)%>%
{.[["breeding_end_dt"]]}
bre <- c(start, end)
ext_vec <-  c(xmin = -12240259, xmax = -1344534,
ymin = -6945058, ymax = 9202317)
ext <- sf::st_bbox(ext_vec, crs = "+proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs")
bre_extent <- ebirdst_extent(ext,
t = bre)
#breeding
bre_abd <- ebirdst_subset(abd, ext = bre_extent)
rm(abd)
bre_abd_mean <- calc(bre_abd, mean)
rm(bre_abd)
#breeding_rabd[[i]] <- bre_abd_mean
exposure <- bre_abd_mean*mod_pland_ebd
exposure_vals <- getValues(exposure)%>%
na.omit()
exposure_vals <- exposure_vals[exposure_vals!=0]
breeding_exp[[i]]<- exposure_vals
rm(exposure)
#detach(package:ebirdst)
}
library(beepr)
beep("mario")
#breeding_rabd <- list()
#save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp.RData")
#save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp_nobarren.RData")
save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp_noFCM.RData")
#breeding_rabd <- list()
#save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp.RData")
#save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp_nobarren.RData")
save(breeding_exp, file = "D:/Allison/Big_data/eBird_outputs/breeding_exp_noFCM.RData")
