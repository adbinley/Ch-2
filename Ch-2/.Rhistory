pd_plots
dev.off()
pd_plots <- ggarrange(plotlist = pd_plot_list,
ncol=4,
nrow = 3)
theme(text = element_text())$text[ c("serif") ]
pd_plots <- annotate_figure(pd_plots,
left = "Prob. Occurrence",
bottom = "Proportion Cover")
png("fig_outputs/pd_plots.png", height = 12, width = 12, units = "in",res=300)
pd_plots
dev.off()
#land cover
library(ebirdst)
library(tidyverse)
preds <- ebirdst::ebirdst_predictors
View(preds)
library(sf)
library(raster)
library(MODIS)
install.packages("MODIS")
library(mapdata)
install.packages("mapdata")
install.packages("MODIS")
library(devtools)
install_version("MODIS")
library(MODIS)
library(exactextractr)
install.packages("exactextractr")
library(viridis)
library(tidyverse)
# resolve namespace conflicts
select <- dplyr::select
map <- purrr::map
projection <- raster::projection
# bcr 27 boundary
bcr <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "bcr") %>%
filter(bcr_code == 27) %>%
# project to the native modis projection
st_transform(crs = paste("+proj=sinu +lon_0=0 +x_0=0 +y_0=0",
"+a=6371007.181 +b=6371007.181 +units=m +no_defs"))
# load ebird data
#ebird <- read_csv("data/ebd_woothr_june_bcr27_zf.csv")
# get list of tiles required to cover this bcr
tiles <- getTile(bcr)
plot(bcr)
# bcr 27 boundary
bcr <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "bcr") %>%
filter(bcr_code == 27) %>%
# project to the native modis projection
st_transform(crs = paste("+proj=sinu +lon_0=0 +x_0=0 +y_0=0",
"+a=6371007.181 +b=6371007.181 +units=m +no_defs"))%>%
st_geometry()
plot(bcr)
# load ebird data
#ebird <- read_csv("data/ebd_woothr_june_bcr27_zf.csv")
# get list of tiles required to cover this bcr
tiles <- getTile(bcr)
library(terra)
library(luna)
install.packages("luna")
library(ebirdst)
q <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop1_lambert.tif")
library(raster)
nat <- c(11:16,20,21,27)
mod <- c(25,35,36,1)
?mask
filter_q <- q %in% c(nat,mod)
c(nat,mod)
lc <- c(nat,mod)
filter_q <- q %in% lc
library(tidyverse)
?getValues
q
q <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop1_lambert.tif")
filter_q <- q %in% lc
q
filter_q
plot(filter_q)
q2 <- mask(q,filter_q)
plot(q2)
filter_q1 <- clamp(filter_q,right=T)
?clamp
?warnings()
warnings()
filter_q1
plot(filter_q1)
filter_q1 <- reclassify(filter_q,right=T)
?clamp
filter_q1 <- clamp(filter_q,lower = 0.5, useValues = F)
warnings()
filter_q1
plot(filter_q1)
q2 <- mask(q,filter_q1)
q2
plot(q2)
filter_q1 <- clamp(filter_q,lower = 0.5, useValues = F)
plot(filter_q1)
q2 <- mask(q,filter_q1)
plot(q2)
rat <- levels(q2)[[1]]
unique(q2)
rat[["landcover"]] <- c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests")
levels(q2) <- rat
my_col = rev(terrain.colors(n = 8))
plot(q2, legend = FALSE, col = my_col)
legend(x='bottomleft', legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(q2, legend = FALSE, col = my_col)
legend(x='right', legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(q2, legend = FALSE, col = my_col)
legend(x = 190, y = 80, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(q2, legend = FALSE, col = my_col)
legend(x = 2e7, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(q2, legend = FALSE, col = my_col)
legend(legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
LCCS1 <- plot(q2, legend = FALSE, col = my_col)
png("fig_outputs/LCCS1.png", height = 9, width = 11.5, units = "in",res=300)
LCCS1
dev.off()
legend(x='top',legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
legend(x='bottom',legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot()
plot(q2, legend = FALSE, col = my_col)
legend(x='bottom',legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
?legend
legend(xjust=0, text.width = 5e6, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(q2, legend = FALSE, col = my_col)
legend(xjust=0, text.width = 5e6, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
legend(x='bottomleft', text.width = 5e6, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
x <- raster("E:/eBird/data/raw/STEM/bkpwar-ERD2019-STATUS-20201002-1c7c7cf3/srd_raster_template.tif")
plot(x)
plot(q2,add=T)
?project
x1 <- projectRaster(x,q2)
writeRaster(x1, filename = "D:/Allison/Big_data/Ch-2 landcover/base_map_lambert.tif")
plot(x1)
plot(q2, add=T)
plot(x1, legend=F, col = "black")
my_col = rev(terrain.colors(n = 8))
plot(q2, legend = FALSE, col = my_col, add=T)
legend(x='bottomleft', text.width = 5e6, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col)
plot(x1, legend=F, col = "black")
my_col = rev(terrain.colors(n = 8))
plot(q2, legend = FALSE, col = my_col, add=T)
writeRaster(q2, filename = "D:/Allison/Big_data/Ch-2 landcover/LCCS1_filtered.tif")
q3 <- raster("D:/Allison/Big_data/Ch-2 landcover/LCCS1_filtered.tif")
plot(q3)
my_col1 <- c("#969595",my_col[2:7])
plot(x1, legend=F, col = "black")
plot(q2, legend = FALSE, col = my_col1, add=T)
legend(x='bottomleft', text.width = 5e6, legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col1)
legend(x='bottomleft', legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col1)
png("fig_outputs/LCCS1.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
plot(q2, legend = FALSE, col = my_col1, add=T)
dev.off()
#LCCS2
r <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop2_lambert.tif")
nat <- c(11:16,20,21,27)
mod <- c(25,35,36,1)
lc <- c(nat,mod)
filter_r <- r %in% lc
x1 <- raster("D:/Allison/Big_data/Ch-2 landcover/base_map_lambert.tif")
filter_r1 <- clamp(filter_r,lower = 0.5, useValues = F)
r2 <- mask(r,filter_r1)
unique(r2)
writeRaster(r2, filename = "D:/Allison/Big_data/Ch-2 landcover/LCCS2_filtered.tif")
x1 <- raster("D:/Allison/Big_data/Ch-2 landcover/base_map_lambert.tif")
my_col = rev(terrain.colors(n = 5))
my_col1 <- c("#969595",my_col[2:5])
plot(x1, legend=F, col = "black")
plot(r2, legend = FALSE, col = my_col1, add=T)
png("fig_outputs/LCCS2.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
plot(r2, legend = FALSE, col = my_col1, add=T)
dev.off()
legend(x='bottomleft', legend = c("Barren", "Open Forests", "Forest/Cropland Mosaics",
"Natural Herbaceous/Croplands Mosaics","Herbaceous Croplands"),
fill = my_col1)
#LCCS2
s <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop3_lambert.tif")
#LCCS3
s <- raster("D:/Allison/Big_data/Ch-2 landcover/MCD12Q1.006_LC_Prop3_lambert.tif")
nat <- c(11:16,20,21,27)
mod <- c(25,35,36,1)
lc <- c(nat,mod)
filter_s <- s %in% lc
filter_s1 <- clamp(filter_s,lower = 0.5, useValues = F)
s2 <- mask(s,filter_s1)
unique(s2)
my_col = rev(terrain.colors(n = 3))
my_col1 <- c("#969595",my_col[2:3])
writeRaster(s2, filename = "D:/Allison/Big_data/Ch-2 landcover/LCCS3_filtered.tif")
x1 <- raster("D:/Allison/Big_data/Ch-2 landcover/base_map_lambert.tif")
plot(x1, legend=F, col = "black")
plot(s2, legend = FALSE, col = my_col1, add=T)
png("fig_outputs/LCCS3.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
png("fig_outputs/LCCS3.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
plot(s2, legend = FALSE, col = my_col1, add=T)
dev.off()
legend(x='bottomleft', legend = c("Barren", "Open Forests", "Woody Wetlands"),
fill = my_col1)
nat <- c(11:16,20,21,27)
mod <- c(25,35,36,1)
lc <- c(nat,mod)
q2 <- raster("D:/Allison/Big_data/Ch-2 landcover/LCCS1_filtered.tif")
my_col = rev(terrain.colors(n = 8))
my_col1 <- c("#969595",my_col[2:7])
my_col1
my_col1 <- c("#969595",my_col[2:7])
my_col = rev(terrain.colors(n = 5))
my_col1 <- c("#969595",my_col[2:5])
my_col = rev(terrain.colors(n = 8))
my_col1 <- c("#969595",my_col[2:7])
my_col1 <- my_col[2:7]
my_col1 <- c("#969595",my_col[2:8])
png("fig_outputs/LCCS1.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
plot(q2, legend = FALSE, col = my_col1, add=T)
x1 <- raster("D:/Allison/Big_data/Ch-2 landcover/base_map_lambert.tif")
png("fig_outputs/LCCS1.png", height = 9, width = 11.5, units = "in",res=300)
plot(x1, legend=F, col = "black")
plot(q2, legend = FALSE, col = my_col1, add=T)
dev.off()
legend(x='bottomleft', legend = c("Barren","Evergreen Needleleaf Forests", "Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests","Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests","Open Forests"),
fill = my_col1)
load("data_outputs/rpis_breeding_2019.RData")
View(rpis_id_breeding)
natural <- c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND")
impacted <- c(#"Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND")#,
rpis_cover <- rpis_id_breeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
#alternate analyses
library(tidyverse)
rpis_cover <- rpis_id_breeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
#new - rescale for only modified vs natural, instead of using ratio
#change for ease of comprehension, same basic relationship
rpis_cover <- rpis_cover %>%
mutate(modified = impacted/(impacted+natural),
forest = 1-modified)
breeding <- rpis_cover %>%
group_by(species_code)%>%
dplyr::summarize(modified_rPI = mean(modified, na.rm = TRUE),
modrPI_var = var(modified, na.rm = TRUE),
natural_rPI = mean(forest, na.rm = TRUE),
natrPI_var = var(forest, na.rm = TRUE))#,
load("data/species_basic.RData")
breeding_rpi_data <- inner_join(breeding, species_basic, by = "species_code")
save(breeding_rpi_data, file = "data_outputs/breeding_rpi_data_alt.RData")
load("data_outputs/rpis_postbreeding_2019.RData")
natural <- c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND")
impacted <- c(#"Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND")#,
rpis_cover <- rpis_id_postbreeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
#new - rescale for only modified vs natural, instead of using ratio
#change for ease of comprehension, same basic relationship
rpis_cover <- rpis_cover %>%
mutate(modified = impacted/(impacted+natural),
forest = 1-modified)
postbreeding <- rpis_cover %>%
group_by(species_code)%>%
dplyr::summarize(modified_rPI = mean(modified, na.rm = TRUE),
modrPI_var = var(modified, na.rm = TRUE),
natural_rPI = mean(forest, na.rm = TRUE),
natrPI_var = var(forest, na.rm = TRUE))#,
load("data/species_basic.RData")
postbreeding_rpi_data <- inner_join(postbreeding, species_basic, by = "species_code")
save(postbreeding_rpi_data, file = "data_outputs/postbreeding_rpi_data_alt.RData")
load("data_outputs/rpis_nonbreeding_2019.RData")
natural <- c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND")
impacted <- c(#"Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND")#,
rpis_cover <- rpis_id_nonbreeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
#new - rescale for only modified vs natural, instead of using ratio
#change for ease of comprehension, same basic relationship
rpis_cover <- rpis_cover %>%
mutate(modified = impacted/(impacted+natural),
forest = 1-modified)
nonbreeding <- rpis_cover %>%
group_by(species_code)%>%
dplyr::summarize(modified_rPI = mean(modified, na.rm = TRUE),
modrPI_var = var(modified, na.rm = TRUE),
natural_rPI = mean(forest, na.rm = TRUE),
natrPI_var = var(forest, na.rm = TRUE))#,
load("data/species_basic.RData")
nonbreeding_rpi_data <- inner_join(nonbreeding, species_basic, by = "species_code")
#save(nonbreeding_rpi_data, file = "data_outputs/IHM_nonbreeding_rpi_data_2019.RData")
save(nonbreeding_rpi_data, file = "data_outputs/nonbreeding_rpi_data_alt.RData")
load("data_outputs/rpis_prebreeding_2019.RData")
natural <- c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND")
impacted <- c(#"Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND")#,
rpis_cover <- rpis_id_prebreeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
#new - rescale for only modified vs natural, instead of using ratio
#change for ease of comprehension, same basic relationship
rpis_cover <- rpis_cover %>%
mutate(modified = impacted/(impacted+natural),
forest = 1-modified)
prebreeding <- rpis_cover %>%
group_by(species_code)%>%
dplyr::summarize(modified_rPI = mean(modified, na.rm = TRUE),
modrPI_var = var(modified, na.rm = TRUE),
natural_rPI = mean(forest, na.rm = TRUE),
natrPI_var = var(forest, na.rm = TRUE))#,
load("data/species_basic.RData")
prebreeding_rpi_data <- inner_join(prebreeding, species_basic, by = "species_code")
#save(prebreeding_rpi_data, file = "data_outputs/IHM_prebreeding_rpi_data_2019.RData")
save(prebreeding_rpi_data, file = "data_outputs/prebreeding_rpi_data_alt.RData")
#create migrants data
load("data_outputs/breeding_rpi_data_alt.RData")
breeding_rpi_data$season <- rep("breeding", length(breeding_rpi_data$species_code))
load("data_outputs/postbreeding_rpi_data_alt.RData")
postbreeding_rpi_data$season <- rep("postbreeding", length(postbreeding_rpi_data$species_code))
load("data_outputs/nonbreeding_rpi_data_alt.RData")
nonbreeding_rpi_data$season <- rep("nonbreeding", length(nonbreeding_rpi_data$species_code))
load("data_outputs/prebreeding_rpi_data_alt.RData")
prebreeding_rpi_data$season <- rep("prebreeding", length(prebreeding_rpi_data$species_code))
migrants_2019 <- rbind(breeding_rpi_data,postbreeding_rpi_data, nonbreeding_rpi_data,prebreeding_rpi_data)
migrants_2019$season <- factor(migrants_2019$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
save(migrants_2019, file = "data_outputs/rPI_migrants_alt.RData")
library(lme4)
library(nlme)
library(car)
library(tidyverse)
library(lmerTest)
library(MuMIn)
library(effectsize)
library(emmeans)
library(lattice)
library(ggpubr)
library(rstatix)
library(ggsci)
library(ggsignif)
load("data_outputs/rPI_migrants_alt.RData")
#lme4
mig.stat.lmer <- lmer(modified_rPI ~ season*SW_mig + (1 | species_code), data = migrants_2019)
summary(mig.stat.lmer)
anova(mig.stat.lmer)
migrants_2019$SW_mig <- factor(migrants_2019$SW_mig, levels=c("N","S","NR","R"))
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(4)
int.plota <- migrants_2019 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Modified rPI") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(5)
mig.diet.plot <- migrants_2019 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig2a <- ggplot(mig.diet.plot, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Modified rPI") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig2a
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(6)
mig.for.plot <- migrants_2019 %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(modified_rPI),
sd = sd(modified_rPI),
se = sd(modified_rPI)/sqrt(length(modified_rPI)))
fig3a <- ggplot(mig.for.plot, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean Modified rPI") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager",
"Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig3a
load("data_outputs/species_breeding_bootstrap.RData")
load("D:/Allison/Github_Projects/Ch-2/Ch-2/data_outputs/bootstrap_all.RData")
load("data_outputs/breeding_pds1.RData")
View(breeding_pds1)
load("D:/Allison/Github_Projects/Ch-2/Ch-2/data_outputs/breeding_mod_mods.RData")
View(breeding_mod_mods)
load("C:/Users/AllisonBinley/OneDrive - Carleton University/thesis/CH2_2021/data_outputs/species_breeding_bootstrap.RData")
View(species_breeding_bs)
