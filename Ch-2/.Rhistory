'AF'="Aerial Forager",
'GH'="Ground Hawker",
'AH'="Aerial Hawker"
)
ggplot(aes(y = rPI, x = season, fill = state), data = IHM_sep)+
geom_boxplot()+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Relative Predictor Importance") +
labs(fill = "State") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_fill_npg(labels = c("Modified","Natural"))+
facet_wrap(.~sw_foraging, labeller = as_labeller(names))
figS14 <- ggplot(aes(y = rPI, x = season, fill = state), data = IHM_sep)+
geom_boxplot()+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Relative Predictor Importance") +
labs(fill = "State") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_fill_npg(labels = c("Modified","Natural"))+
facet_wrap(.~sw_foraging, labeller = as_labeller(names))
png("appendix_plots/figureS14.png", height = 8, width = 11.5, units = "in",res=300)
figS14
dev.off()
all_data1 <- all_data %>%
group_by(season, sw_foraging, state) %>%
summarise(across(where(is.numeric), ~sum(.>0)/length(.)))
all_data3 <- all_data1 %>%
pivot_longer(!c("season","sw_foraging","state"), names_to = "No.", values_to = "PP" )
all_data3$season <- factor(all_data3$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
ggplot(aes(y = PP, x = season, fill = state), data = all_data3)+
geom_boxplot()+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Proportion Positive") +
labs(fill = "State") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_fill_npg(labels = c("Modified","Natural"))+
facet_wrap(.~diet2, labeller = as_labeller(names))
ggplot(aes(y = PP, x = season, fill = state), data = all_data3)+
geom_boxplot()+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Proportion Positive") +
labs(fill = "State") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_fill_npg(labels = c("Modified","Natural"))+
facet_wrap(.~sw_foraging, labeller = as_labeller(names))
figS15 <- ggplot(aes(y = PP, x = season, fill = state), data = all_data3)+
geom_boxplot()+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Proportion Positive") +
labs(fill = "State") +
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_fill_npg(labels = c("Modified","Natural"))+
facet_wrap(.~sw_foraging, labeller = as_labeller(names))
png("appendix_plots/figureS15.png", height = 8, width = 11.5, units = "in",res=300)
figS15
dev.off()
library(ebirdst)
library(sf)
# load gis data for making maps
map_proj <- st_crs(4326)
ne_land <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "ne_land") %>%
st_transform(crs = map_proj) #%>%
bcr <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "bcr") %>%
st_transform(crs = map_proj) %>%
st_geometry()
ne_country_lines <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "ne_country_lines") %>%
st_transform(crs = map_proj) #%>%
ne_state_lines <- read_sf("C:/Users/AllisonBinley/OneDrive - Carleton University/eBird r code/2. Subset eBird/BestPracdata/data/gis-data.gpkg", "ne_state_lines") %>%
st_transform(crs = map_proj) #%>%
load("D:/Allison/Github_Projects/Ch-2/Ch-2/data_outputs/rpis_breeding_2019.RData")
stacked <- rpis_id_breeding%>%
filter(stixel_id == "63-199.6-NSSWNEEN",#"48-177-NSSNSW",
species_code=="magwar")%>% #this is the specific stixel pictured on the map
select(c(6:28))
library(tidyverse)
stacked <- rpis_id_breeding%>%
filter(stixel_id == "63-199.6-NSSWNEEN",#"48-177-NSSNSW",
species_code=="magwar")%>% #this is the specific stixel pictured on the map
select(c(6:28))
stacked_long <- pivot_longer(stacked, 1:23, names_to="lc_class", values_to = "PI")
stacked_long$x <- rep("x", length(stacked_long$lc_class))
stacked_long$lc_class <- factor(stacked_long$lc_class, levels=c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND", #8 natural
"Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND",
"Barren PLAND", # 4 modified
"Tidal Mudflats PLAND","Permanent Snow and Ice PLAND","Sparse Forests PLAND",
"Unclassified PLAND","Dense Herbaceous PLAND","Sparse Herbaceous PLAND",
"Dense Shrublands PLAND","Shrubland/Grassland Mosaics PLAND","Sparse Shrublands PLAND",
"Herbaceous Wetlands PLAND","Tundra PLAND" # 11 other
))
stacked_long1 <- stacked_long %>%
filter(PI >0) #6 natural, 3 modified, 2 other
clrs <- c("#062891","#0541C2","#1097F7","#051F72","#04528A","#6c8EF8","#FEE227","#FDC12A","#FDA50F","#616161","#C1C1C1")
plot_main <- ggplot(stacked_long1, aes(x=x, y=PI, fill = lc_class))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= clrs)+
theme_classic(base_family = "serif", base_size = 18)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
xlab("")+
ylab("Relative Predictor Importance")+
labs(fill="Land Cover Class")
ggplot(stacked_long1, aes(x=x, y=PI, fill = lc_class))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(name = "Land Cover Class",values= clrs,
labels = c("Evergreen Needleleaf Forests","Evergreen Broadleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests",
"Mixed Broadleaf/Needleleaf Forests",
"Mixed Broadleaf Evergreen/Deciduous Forests",
"Open Forests", "Woody Wetlands",
"Forest/Cropland Mosaics",
"Natural Herbaceous/Croplands Mosaics",
"Herbaceous Croplands",
"Barren",
"Tidal Mudflats","Permanent Snow and Ice","Sparse Forests",
"Unclassified","Dense Herbaceous","Sparse Herbaceous",
"Dense Shrublands","Shrubland/Grassland Mosaics","Sparse Shrublands",
"Herbaceous Wetlands","Tundra"))+
theme_classic(base_family = "serif", base_size = 18)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
xlab("")+
ylab("Relative Predictor Importance")
View(stacked_long)
View(stacked_long1)
View(rpis_id_breeding)
View(stacked)
View(stacked)
View(stacked)
View(stacked_long1)
stacked_long1$lc_class <- factor(stacked_long1$lc_class, levels="Evergreen Needleleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND", #8 natural
"Forest/Cropland Mosaics PLAND",
"Herbaceous Croplands PLAND",
"Barren PLAND", # 4 modified
"Sparse Forests PLAND",
"Dense Herbaceous PLAND")
stacked_long1$lc_class <- factor(stacked_long1$lc_class, levels=c("Evergreen Needleleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND", #8 natural
"Forest/Cropland Mosaics PLAND",
"Herbaceous Croplands PLAND",
"Barren PLAND", # 4 modified
"Sparse Forests PLAND",
"Dense Herbaceous PLAND"))
ggplot(stacked_long1, aes(x=x, y=PI, fill = lc_class))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(name = "Land Cover Class",values= clrs,
labels = c("Evergreen Needleleaf Forests",
"Deciduous Needleleaf Forests","Deciduous Broadleaf Forests",
"Mixed Broadleaf/Needleleaf Forests",
"Open Forests", "Woody Wetlands PLAND", #8 natural
"Forest/Cropland Mosaics",
"Herbaceous Croplands",
"Barren", # 4 modified
"Sparse Forests",
"Dense Herbaceous"))+
theme_classic(base_family = "serif", base_size = 18)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
xlab("")+
ylab("Relative Predictor Importance")
plot_main <- ggplot(stacked_long1, aes(x=x, y=PI, fill = lc_class))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= clrs)+
theme_classic(base_family = "serif", base_size = 18)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
xlab("")+
ylab("Relative Predictor Importance")+
labs(fill="Land-Cover Class")
View(rpis_id_breeding)
library(tidyverse)
magwar <- rpis_id_breeding %>%
filter(species_code == "magwar")
View(magwar)
natural <- c("Evergreen Needleleaf Forests PLAND","Evergreen Broadleaf Forests PLAND",
"Deciduous Needleleaf Forests PLAND","Deciduous Broadleaf Forests PLAND",
"Mixed Broadleaf/Needleleaf Forests PLAND",
"Mixed Broadleaf Evergreen/Deciduous Forests PLAND",
"Open Forests PLAND", "Woody Wetlands PLAND")
impacted <- c("Forest/Cropland Mosaics PLAND",
"Natural Herbaceous/Croplands Mosaics PLAND",
"Herbaceous Croplands PLAND",
"Barren PLAND" )
rpis_cover <- rpis_id_breeding %>%
mutate(natural = rowSums(select(., all_of(natural))),
impacted = rowSums(select(., all_of(impacted))),
ratio = (impacted+1)/(natural+1))
magwar <- rpis_cover %>%
filter(species_code == "magwar")
View(magwar)
plot(magwar$natural, magwar$impacted)
cor(magwar$natural,magwar$impacted)
cor(rpis_cover$natural,rpis_cover$impacted)
magwar <- rpis_cover %>%
filter(species_code == "houwre")
plot(rpis_co$natural, magwar$impacted)
plot(magwar$natural, magwar$impacted)
cor(magwar$natural,magwar$impacted)
View(rpis_cover)
load("data_outputs/IHM_migrants_2019.RData")
View(migrants_2019)
#lme4
mig.stat.lmer <- lmer(natural1 ~ season*SW_mig + (1 | species_code), data = migrants_2019)
library(lme4)
library(nlme)
library(car)
library(tidyverse)
library(lmerTest)
library(MuMIn)
library(effectsize)
library(emmeans)
library(lattice)
library(ggpubr)
library(rstatix)
library(ggsci)
library(ggsignif)
#lme4
mig.stat.lmer <- lmer(natural1 ~ season*SW_mig + (1 | species_code), data = migrants_2019)
summary(mig.stat.lmer)
anova(mig.stat.lmer)
#lme4
mig.stat.lmer <- lmer(modified1 ~ season*SW_mig + (1 | species_code), data = migrants_2019)
#lme4
mig.stat.lmer <- lmer(impacted1 ~ season*SW_mig + (1 | species_code), data = migrants_2019)
summary(mig.stat.lmer)
AIC(mig.stat.lmer)
anova(mig.stat.lmer)
migrants_2019$season <- factor(migrants_2019$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
migrants_2019$SW_mig <- factor(migrants_2019$SW_mig, levels=c("N","S","NR","R"))
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(4)
int.plota <- migrants_2019 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(impacted1),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(2*se), ymax=mean+(2*se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
#boxplot
fig2a <- ggplot(aes(y = impacted1, x = season), data = migrants_2019) +
geom_boxplot(aes(fill = diet2),position=position_dodge(.9))+
#geom_violin(aes(fill = SW_mig),position=position_dodge(.9))+
#geom_jitter(aes(color=SW_mig, fill = SW_mig), size=0.4, alpha=0.5) +
#stat_summary(fun=mean, geom="point", aes(group=SW_mig), position=position_dodge(.9),
#              size=2, pch = 17)+
#geom_line(data = df_mean,
#          mapping = aes(x = season, y = average, group = SW_mig),
#          position=position_dodge(.9))+
geom_point(position=position_dodge(width=0.9),aes(group=diet2), alpha = 0.1)+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("IHM") +
labs(fill = "Diet") +
geom_hline(yintercept=1, linetype="dashed",
color = "orange", size=1)+
theme(axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank())+#,
#axis.title.y = element_blank())+
scale_fill_npg(labels=c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"))#+
#facet_wrap(~diet2)
fig2a
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(5)
mig.diet.plot <- migrants_2019 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(impacted1),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig2a <- ggplot(mig.diet.plot, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig2a
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(6)
mig.for.plot <- migrants_2019 %>%
group_by(sw_foraging, season) %>%
dplyr::summarize(mean = mean(impacted1),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig3a <- ggplot(mig.for.plot, aes(x = season, y = mean, group = sw_foraging, col = sw_foraging)) +
geom_line(aes(group=sw_foraging),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Foraging Strategy",
labels = c("Aerial Forager","Aerial Hawker","Bark Forager",
"Foliage Gleaner","Ground Forager","Ground Hawker"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig3a
#mig.for.lme <- lme(SHM ~ season*sw_foraging, data = migrants, random = ~ 1 | species_code)
#summary(mig.for.lme)
#anova(mig.diet.lme)
#summary(aov(SHM ~ season*diet2 + Error(species_code), data = migrants))
#lme4
mig.for.lmer <- lmer(impacted1 ~ season*sw_foraging + (1 | species_code), data = migrants_2019)
summary(mig.for.lmer)
anova(mig.for.lmer)
#mig.diet.lme <- nlme::lme(SHM ~ season*diet2, data = migrants, random = ~ 1 | species_code)
#summary(mig.diet.lme)
#anova(mig.diet.lme)
#summary(aov(SHM ~ season*diet2 + Error(species_code), data = migrants))
#lme4
mig.diet.lmer <- lmer(impacted1 ~ season*diet2 + (1 | species_code), data = migrants_2019)
summary(mig.diet.lmer)
anova(mig.diet.lmer)
#mig.diet.lme <- nlme::lme(SHM ~ season*diet2, data = migrants, random = ~ 1 | species_code)
#summary(mig.diet.lme)
#anova(mig.diet.lme)
#summary(aov(SHM ~ season*diet2 + Error(species_code), data = migrants))
#lme4
mig.diet.lmer <- lmer(IHM ~ season*diet2 + (1 | species_code), data = migrants_2019)
summary(mig.diet.lmer)
anova(mig.diet.lmer)
View(migrants_2019)
migrants_2019 <- migrants_2019 %>%
mutate(modified = impacted1/(impacted1+natural1))
View(migrants_2019)
load("D:/Allison/Github_Projects/Ch-2/Ch-2/data_outputs/IHM_migrants_2019.RData")
View(migrants_2019)
migrants_2019 <- migrants_2019 %>%
mutate(modified = impacted1/(impacted1+natural1))
#lme4
mig.stat.lmer <- lmer(modified ~ season*SW_mig + (1 | species_code), data = migrants_2019)
summary(mig.stat.lmer)
AIC(mig.stat.lmer)
anova(mig.stat.lmer)
#lme4
mig.stat.lmer <- lmer(impacted1 ~ season*SW_mig + (1 | species_code), data = migrants_2019)
anova(mig.stat.lmer)
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(5)
mig.diet.plot <- migrants_2019 %>%
group_by(diet2, season) %>%
dplyr::summarize(mean = mean(modified),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig2a <- ggplot(mig.diet.plot, aes(x = season, y = mean, group = diet2, col = diet2)) +
geom_line(aes(group=diet2),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
#geom_errorbar(aes(ymin=mean-(se), ymax=mean+(se)), width=1,
# position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Diet",
labels = c("Carnivore","Frugivore","Granivore","Insectivore","Omnivore"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig2a
#not boxplot
mypal <- pal_npg("nrc", alpha = 1)(4)
int.plota <- migrants_2019 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(modified),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
# geom_errorbar(aes(ymin=mean-(2*se), ymax=mean+(2*se)), width=1,
#              position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
migrants_2019$season <- factor(migrants_2019$season, levels=c("breeding", "postbreeding","nonbreeding", "prebreeding"))
migrants_2019$SW_mig <- factor(migrants_2019$SW_mig, levels=c("N","S","NR","R"))
#boxplot
fig1a <- ggplot(aes(y = IHM, x = season), data = migrants_2019) +
geom_boxplot(aes(fill = SW_mig),position=position_dodge(.9))+
#geom_violin(aes(fill = SW_mig),position=position_dodge(.9))+
#geom_jitter(aes(color=SW_mig, fill = SW_mig), size=0.4, alpha=0.5) +
#stat_summary(fun=mean, geom="point", aes(group=SW_mig), position=position_dodge(.9),
#              size=2, pch = 17)+
#geom_line(data = df_mean,
#          mapping = aes(x = season, y = average, group = SW_mig),
#          position=position_dodge(.9))+
geom_point(position=position_dodge(width=0.9),aes(group=SW_mig), alpha = 0.1)+
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("IHM") +
geom_hline(yintercept=1, linetype="dashed",
color = "orange", size=1)+
labs(fill = "Migratory Strategy") +
theme(axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank())+
scale_fill_npg(labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"))
int.plota <- migrants_2019 %>%
group_by(SW_mig, season) %>%
dplyr::summarize(mean = mean(modified),
sd = sd(impacted1),
se = sd(impacted1)/sqrt(length(impacted1)))
fig1a <- ggplot(int.plota, aes(x = season, y = mean, group = SW_mig, col = SW_mig)) +
geom_line(aes(group=SW_mig),position=position_dodge(0.6)) +
geom_point(position=position_dodge(0.6), size=3, pch=18) +
# geom_errorbar(aes(ymin=mean-(2*se), ymax=mean+(2*se)), width=1,
#              position=position_dodge(0.6)) +
theme_classic(base_size = 22, base_family = "serif") +
xlab("Season") +
ylab("Mean IHM") +
# geom_hline(yintercept=1, linetype="dashed",
#            color = "black", size=1)+
#labs(col = "Migratory Strategy") +
#theme(axis.text.x = element_blank(),
#    #axis.ticks.x = element_blank(),
#    axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust=1))+
scale_color_manual(name = "Migratory Strategy",
labels = c("Neotropical Migrants","Short-Distance Migrants","Neotropical Residents","North American Residents"),
values=mypal)+
geom_vline(xintercept=c(1.5,2.5,3.5),color="grey",alpha=0.5)
fig1a
